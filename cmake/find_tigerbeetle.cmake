include(CheckLibraryExists)
if(CMAKE_C_COMPILER_LOADED)
    include (CheckIncludeFile)
    include (CheckCSourceCompiles)
elseif(CMAKE_CXX_COMPILER_LOADED)
    include (CheckIncludeFileCXX)
    include (CheckCXXSourceCompiles)
else()
    message(FATAL_ERROR "FindTigerBeetle only works if either C or CXX language is enabled")
endif()


# Set the root directory of the TigerBeetle library
set(TIGERBEETLE_ROOT_DIR ${CMAKE_CURRENT_BINARY_DIR}/_deps/tb-src/src)

# Specify the directories for different platforms
set(TIGERBEETLE_INCLUDE_DIR ${TIGERBEETLE_ROOT_DIR}/clients/c/lib/include)
set(TIGERBEETLE_LIBRARY_DIR "")
set(CMAKE_TIGERBEETLE_LIBS_INIT "")

if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
        set(TIGERBEETLE_LIBRARY_DIR ${TIGERBEETLE_ROOT_DIR}/clients/c/lib/aarch64-linux-musl)
    else()
        set(TIGERBEETLE_LIBRARY_DIR ${TIGERBEETLE_ROOT_DIR}/clients/c/lib/x86_64-linux-gnu)
    endif()
    set(CMAKE_TIGERBEETLE_LIBS_INIT "libtb_client.a")
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
        set(TIGERBEETLE_LIBRARY_DIR ${TIGERBEETLE_ROOT_DIR}/clients/c/lib/aarch64-macos)
    else()
        set(TIGERBEETLE_LIBRARY_DIR ${TIGERBEETLE_ROOT_DIR}/clients/c/lib/x86_64-macos)
    endif()
    set(CMAKE_TIGERBEETLE_LIBS_INIT "libtb_client.a")
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
        set(TIGERBEETLE_LIBRARY_DIR ${TIGERBEETLE_ROOT_DIR}/clients/c/lib/x86_64-windows)
    else()
        set(TIGERBEETLE_LIBRARY_DIR ${TIGERBEETLE_ROOT_DIR}/clients/c/lib/aarch64-windows)
    endif()
    set(CMAKE_TIGERBEETLE_LIBS_INIT "tb_client.lib")
endif()

add_library(TigerBeetle STATIC IMPORTED)
set_target_properties(TigerBeetle PROPERTIES IMPORTED_LOCATION ${TIGERBEETLE_LIBRARY_DIR}/${CMAKE_TIGERBEETLE_LIBS_INIT})
